name: Build Status

on:
  push:
    branches: [ main , dev]
  pull_request:
    branches: [ main , dev]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    
    - name: Update apt-get
      run: sudo apt-get update

    # OPENMP
    - name: Install openmp
      shell: bash
      run: sudo apt-get update && sudo apt-get install -yq libomp-dev 

    # BOOST
    - name: Install boost
      shell: bash
      run: sudo apt-get update && sudo apt-get install -yq libboost-all-dev

    # GSL
    - name: Install GSL
      shell: bash
      run: sudo apt-get update && sudo apt-get install libgsl-dev
      
    # ARB
    - name: Install ARB
      shell: bash
      run: sudo apt-get update && sudo apt-get install libflint-arb-dev

    # LCOV
    - name: Install lcov
      run: sudo apt-get update && sudo apt-get install lcov
    
    # CODECOV
    - name: Install codecov
      shell: bash
      run: sudo pip install codecov

      # Finding flint
    - name: Install flint 
      shell: bash
      run: sudo apt-get update && sudo apt-get install libflint-dev

    # BUILD
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build
    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCODE_COVERAGE=ON $GITHUB_WORKSPACE
    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    # TEST
    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -V

    # CODE COVERAGE
    - name: Code coverage - Capture coverage info
      working-directory: ${{runner.workspace}}
      run: lcov --directory . --capture --output-file coverage.info 
    - name: Code coverage - Filter out system, external, and unit test source files
      working-directory: ${{runner.workspace}}
      run: lcov --remove coverage.info '/Library/*' '/usr/*' "${HOME}"'/.cache/*' '*/tests/*' '*/external/*' --output-file coverage.info
    - name: Code coverage - Output coverage data for debugging
      working-directory: ${{runner.workspace}}
      run: lcov --list coverage.info
    - name: Code coverage - Upload to CodeCov
      working-directory: ${{runner.workspace}}
      run:  bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"